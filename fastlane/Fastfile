# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.90.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    # cocoapods
    # carthage
  end

  desc "Runs all the tests"
  lane :test_all_schemes do
    scan(scheme: "BiblioArchiver", clean: true)
  end

  desc "Swift Lint"
  lane :upgrade_swift_lint do
      Actions.sh("brew update")
      Actions.sh("brew remove swiftlint")
      Actions.sh("brew install swiftlint")
  end

  desc "Build for Carthage"
  lane :carthage_lint do
      Actions.sh("cd .. && carthage build --no-skip-current && cd fastlane")
  end

  desc "Lint for Cocoapod"
  lane :pod_lint do
      Actions.sh("cd .. && pod lib lint && cd fastlane")
  end

  desc "Lint"
  lane :lint do
      carthage_lint
      pod_lint
  end

  desc "Release new version"
  lane :release do |options|
      target_version = options[:version]
      raise "The version is missed. Use `fastlane release version:{version_number}`.`" if target_version.nil?

      # upgrade_swift_lint

      ensure_git_branch
      ensure_git_status_clean

      test_all_schemes
      carthage_lint

      sync_build_number_to_git
      increment_version_number(version_number: target_version)
      version_bump_podspec(path: "BiblioArchiver.podspec", version_number: target_version)

      log = extract_current_change_log(version: target_version)
      release_log = update_change_log(log: log)

      git_commit_all(message: "Bump version to #{target_version}")

      Actions.sh("git tag -s #{target_version} -m ''")

      push_to_git_remote

      set_github_release(
      repository_name: "dongdonggaui/BiblioArchiver",
      api_token: ENV['GITHUB_TOKEN'],
      name: release_log[:title],
      tag_name: target_version,
      description: release_log[:text]
      )

      pod_push
  end

  lane :podpush do
    pod_push
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
